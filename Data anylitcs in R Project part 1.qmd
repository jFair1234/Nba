---
title: 'DTSC 650: Data Analytics In R'
subtitle: 'CodeGrade Final Project Part 1'
output: html_notebook
editor_options:
  chunk_output_type: inline
---

## Student Info

```         
Name: Jaron Fairweather
Term: spring 1 
Date:2/20/2024
```

------------------------------------------------------------------------

## General Instructions

------------------------------------------------------------------------

### Name of File

Name your assignment file **`BRFSS_Part1`**. This is a quarto "markdown" file, which has the file has the extension '.qmd'.

------------------------------------------------------------------------

### Allowable packages

The only allowable packages are `tidyverse`. You should not use any other packages as CodeGrade is not set up to accept them on this assignment.

-   If the allowable packages are not installed on your local computer, you'll need to do a one-time installation *from the Console Window in RStudio* for each package like this:\
    **`install.packages('<package name>')`**\
    *Do not attempt to install packages in code that you submit to CodeGrade.*

-   Note: installing the entire tidyverse with `install.packages('tidyverse')` from the Console Window will save you from having to install any of the tidyverse's individual packages in the future.

-   In your code, load the package's library like this: **`library(<library name>)`**

------------------------------------------------------------------------

### Do / Do not

-   Do use tidyverse functions for all of the questions where possible.

-   Do use plenty of comments throughout your code so that the grader can follow your line of thinking.

-   Do not use `print()` anywhere in the notebook. If you do this while working on the project, please be sure to comment those lines out before submitting.

-   Do not rearrange dataframe outputs unless specified by the question instructions.

-   Do not create multiple copies of the BRFSS dataset in your script. Creating too many copies of the dataset can cause CodeGrade to crash with exit code -9. If you see that error on your Practice Submission, please check for this.

------------------------------------------------------------------------

### Data Set

-   These data come from [Kaggle](https://www.kaggle.com/cdc/behavioral-risk-factor-surveillance-system).

-   To answer these questions you will need to use the codebook on Brightspace, called `codebook15_llcp.pdf`. Please note that not all of the variables listed in the codebook are included in the .csv file to be downloaded from Brightspace.

-   Download the `BRFSS2015_650.csv` file from Brightspace and place it in the same folder/directory as your script file. Then in RStudio, set your Working Directory to your Source File location: in the menus choose Session \| Set Working Directory \| To Source File Location. You most likely will see some warnings after it loads due to the fact that `read_csv()` will try to guess the column type but because there are so many rows it won't read enough of them to accurately make a guess.

-   You must use the `read_csv()` function when loading the .csv file. Do not use read.csv().

-   Do not rename the .csv file that you download from Brightspace.

-   Do not edit the .csv file.

------------------------------------------------------------------------

### Pipe Notation

You may use the `tidyverse` pipe **`%>%`** or the new base R pipe **`|>`**. See [here](https://www.tidyverse.org/blog/2023/04/base-vs-magrittr-pipe/) for a comparison.

You are expected to use pipe notation in all of the CodeGrade assignments. Although there are alternate ways to filter, subset, and summarize data sets, using the pipe creates more readable code and is an important skill to develop.

------------------------------------------------------------------------

### Rounding requirement

Round all float/dbl values to two decimal places.

------------------------------------------------------------------------

### Dataframe vs. Tibble

Typically, in CodeGrade assignments, we expect output to be dataframes, not tibbles, unless otherwise noted.

------------------------------------------------------------------------

### Preliminaries

```{r}
### It's always a good idea when working in RStudio to start with a clean environment. 
### Clear objects from the environment memory that may be leftover from previous 
###   versions of your code or other assignments by running the following line:
rm(list = ls())

### Load Libraries
### The tidyverse package is the only allowable package on Q1-Q9.

library(tidyverse) 

### Load the Data
### Load the data file
brf <- read_csv("BRFSS2015_650.csv")

```

------------------------------------------------------------------------

## Questions

------------------------------------------------------------------------

### Q1 How many people reported their general health is excellent?

-   The answer should be a number assigned to Q1.

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q1 # 

### TYPE YOUR CODE BELOW ###
Q1 <- brf |>
        select(GENHLTH) |>
        filter(GENHLTH == 1) |>
        nrow()




### VIEW OUTPUT ###
Q1

```

### Q2 What is the highest value for the number of adult women in the household where someone has ever had a stroke?

-   Summarize the value in a variable called `max_num_women`.
-   The output should be a dataframe assigned to Q2 and look something like this:

```         
  max_num_women
1       [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q2 # 

### TYPE YOUR CODE BELOW ###
Q2 <- brf |>
        filter(CVDSTRK3 == 1) |>
        summarise(max_num_women = max(NUMWOMEN, na.rm = TRUE)) |>
        as.data.frame()




### VIEW OUTPUT ###
Q2

```

### Q3 Compute the mean and standard deviation for `MENTHLTH` comparing caregivers who managed personal care such as giving medications, feeding, dressing, or bathing and those who did not.

-   The summary variable names should be `mean_mental` and `sd_mental`.
-   Keep in mind that one of the possible answers to "how many days" in MENTHLTH is 0, not just 1-30.
-   Your output should match the value included in the dataframe below. This value is given to you as a check to make sure you are on the right track.
-   The output should be a dataframe assigned to Q3 and look something like this:

```         
    CRGVPERS mean_mental sd_mental
1          1        5.23   [value]
2          2     [value]   [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q3 # 

### TYPE YOUR CODE BELOW ###
Q3 <- brf |>
        mutate(MENTHLTH = ifelse(MENTHLTH %in% c(88), 0, MENTHLTH)) |> 
        filter(CRGVPERS %in% c(1, 2) & MENTHLTH <= 30) |>
        group_by(CRGVPERS) |>
        summarise(
          mean_mental = mean(MENTHLTH, na.rm = FALSE),
          sd_mental = sd(MENTHLTH, na.rm = FALSE)) |>
        round(2) |>
        as.data.frame()




### VIEW OUTPUT ###
Q3

```

### Q4 What is the median age when respondents were told they had diabetes for those living in Pennsylvania?

-   Only calculate it for those who gave an age.
-   The summary variable name should be `med_diab_age`.
-   The output should be a dataframe assigned to Q4 and look something like this:

```         
  med_diab_age
1      [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q4 # 

### TYPE YOUR CODE BELOW ###
Q4 <- brf |>
        filter(`_STATE` == 42 & DIABAGE2 <= 97) |>
        summarise(med_diab_age = median(DIABAGE2)) |>
        as.data.frame()




### VIEW OUTPUT ###
Q4

```

### Q5 Predict the number of days in the past 30 days that mental health was not good from marital status.

-   Your output should match the value included in the summary below. This value is given to you as a check to make sure you are on the right track.
-   Keep in mind that one of the possible answers to "how many days" is 0, not just 1-30.
-   Make sure you know what type of variable MARITAL is. You'll need to consider this when determining how to do linear regression with it.
-   Assign the summary of the model to Q5. Note: the general instructions say to round all output but the summary() of a model is not able to be rounded. Your output should look something like this:

```         
Call:
lm(formula = <VARIABLE> ~ <VARIABLE>, data = <data_set>)

Residuals:
    Min       1Q   Median        3Q      Max 
[value]  [value]   [value]  [value]  [value]  

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  [value]    [value] [value]  [value] ***
MARITAL2     2.26240    [value] [value]  [value] ***
MARITAL3     [value]    [value] [value]  [value] ***
MARITAL4     [value]    [value] [value]  [value] ***
MARITAL5     [value]    [value] [value]  [value] ***
MARITAL6     [value]    [value] [value]  [value] ***
```

Be careful that the names your output (e.g., MARITAL2) match exactly with those shown above.

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q5 # 

### TYPE YOUR CODE BELOW ###
data_1 <- brf |>
        mutate(MENTHLTH = ifelse(MENTHLTH %in% c(88), 0, MENTHLTH)) |>
        filter(MENTHLTH <= 30 & MARITAL <= 6)

data_1$MARITAL <- paste0("MARITAL", data_1$MARITAL) 

#as.character(data_1$MARITAL)



Q5 <- summary(lm(MENTHLTH ~ MARITAL, data = data_1))
        




### VIEW OUTPUT ###
Q5

```

### Q6 Use `summarise` to compare the mean number of days in the past 30 days that mental health was not good by marital status.

-   The summary variable name should be mean_mental.
-   Your output should match the value included in the dataframe below. This value is given to you as a check to make sure you are on the right track.
-   The mean value for marital status 1 should help you to confirm the intercept value from Q5.
-   The output should be a dataframe assigned to Q6 and look something like this:

```         
  MARITAL mean_mental
1       1     [value]
2       2     [value]
3       3        3.08
4       4     [value]
5       5     [value]
6       6     [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q6 # 

### TYPE YOUR CODE BELOW ###
Q6 <- brf |>
        mutate(MENTHLTH = ifelse(MENTHLTH %in% c(88), 0, MENTHLTH)) |>
        filter(MARITAL <= 6 & MENTHLTH <= 30) |>
        group_by(MARITAL) |>
        summarise(mean_mental = mean(MENTHLTH)) |>
        round(2) |>
        as.data.frame()




### VIEW OUTPUT ###
Q6

```

### Q7 Calculate the means and standard deviations of `MENTHLTH` for those who have ever been diagnosed with a stroke and those who have not had a stroke only for those who do not have any kind of healthcare coverage.

-   The summary variable names should be mean_mental and sd_mental.

-   Your output should match the value included in the dataframe below. This value is given to you as a check to make sure you are on the right track.

-   The output should be a dataframe assigned to Q7 and look something like this:

```         
<VARIABLE> mean_mental sd_mental
1         1        8.89   [value]
2         2     [value]   [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q7 # 

### TYPE YOUR CODE BELOW ###
Q7 <- brf |>
      mutate(MENTHLTH = ifelse(MENTHLTH %in% c(88), 0, MENTHLTH)) |>
      filter(MENTHLTH <= 30 & CVDSTRK3 %in% c(1, 2) & HLTHPLN1 == 2) |>
      group_by(CVDSTRK3) |>
      summarise(mean_mental = mean(MENTHLTH),
                sd_mental = sd(MENTHLTH)) |>
      round(2) |>
      as.data.frame()
        




### VIEW OUTPUT ###
Q7

```

### Q8 Each respondent was asked if they participated in any physical activities in the past month. They were then asked what physical activity they spent the most time doing (or did the most) in the past month. Next, they were asked how many times per week or per month they took part in that exercise/activity. Run an ANOVA comparing how many times ***per week*** they took part in that exercise/activity with marital status.

-   You may need to do some research on how to do this in R.
-   Viewing the Codebook and Questionnaire may be helpful once you determine the correct variable to analyze.
-   Assign the summary of `aov()` to Q8. Note: the general instructions say to round all output but the summary of `aov()` is not able to be rounded.
-   Your output should match the value included in the output below. This value is given to you as a check to make sure you are on the right track.
-   Use the summary of aov() not anova().

```         
                         Df     Sum Sq  Mean Sq  F value   Pr(>F)    
[variable]                5       7706  [value]  [value]  [value] ***
Residuals             [value]  [value]  [value]                                
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1`
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q8 # 

### TYPE YOUR CODE BELOW ###
 cut_data <- brf |>
              filter(EXEROFT1 %in% c(101:199) & MARITAL %in% c(1:6))

cut_data$MARITAL <- paste0("MARITAL", cut_data$MARITAL) 



Q8 <- summary(aov(EXEROFT1 ~ MARITAL, data = cut_data))



### VIEW OUTPUT ###
Q8

```

### Q9 Consider only men for the following question. Each respondent was asked if they participated in any physical activities in the past month. They were then asked what physical activity they spent the most time doing (or did the most) in the past month.

### Respondents were also asked to consider the past 30 days and answer either a) how many days per week or b) how many days per month did they have at least one drink of any alcoholic beverage.

### For each type of physical activity or exercise, calculate the variance of the number of days *per week* a respondent drank alcohol.

-   Note: pay careful attention to how values are coded in the Codebook.

-   The summary variable name should be called var_drinks.

-   Arrange in descending order, and include only the six with the highest variance in drinks.

-   The output should be a dataframe assigned to Q9 and look something like this:

```         
  EXRACT11 var_drinks
1       55    [value]
2  [value]    [value]
3  [value]    [value]
4  [value]       6.67
5  [value]    [value]
6  [value]    [value]
```

```{r}
### Do not edit the following line. It is used by CodeGrade.
# CG Q9 # 

### TYPE YOUR CODE BELOW ###

Q9 <- brf |>
              mutate(ALCDAY5 = ifelse(ALCDAY5 >= 100, ALCDAY5 - 100, ALCDAY5)) |>
              mutate(ALCDAY5 = ifelse(ALCDAY5 == 788, 0, ALCDAY5)) |>
              filter(SEX == 1 & ALCDAY5 %in% c(1:99, 0)) |>
              group_by(EXRACT11) |>
              summarise(var_drinks = var(ALCDAY5, na.rm = TRUE)) |>
              select(EXRACT11, var_drinks) |>
              arrange(desc(var_drinks)) |>
              round(2) |>
              slice_head(n = 6) |>
              as.data.frame()



### VIEW OUTPUT ###
Q9

```

------------------------------------------------------------------------

# Before submitting to Code Grade:

1)  Clear objects from your environment. Click the broom in the Environment pane in the top right. This will erase any variables (like Q1, Q2) that you've stored.

2)  Rerun all your code. You can click the "Run" option above in this script pane (top right of notebook), then select "Run all". You should have all the variables stored again in the environment pane, and you should see no red error messages in the console below.

3)  Remember, you must submit a "practice" test submission on Brightspace. This test submission link is mandatory and in order to gain access to the final submission links for the actual project, you must achieve 100% on the Part 1 test submission.

4)  **Important**: You only have ONE ATTEMPT to submit Part 1 to the ACTUAL submission link! Ensure you are ready and confident in your work before submitting.

------------------------------------------------------------------------
